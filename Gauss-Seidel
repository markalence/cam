function idk = jacobi(A,b,x0,tol)

n = length(A);
check = 0;

for i = 1:n
x(i) = x0;
c(i) = x0;
endfor
iterations = 0;


do

for i = 1:n
for j = 1:n

if j == i
continue
endif

check = check +1;

if check == 1
x(i) =  b(i) - A(i,j)*x(j);
endif

if check ~= 1 && check ~= n-1
x(i) = x(i) - (A(i,j)*x(j));

endif

if check == n-1
x(i) = x(i) - x(j) * A(i,j);
x(i) = x(i)/A(i,i);
endif

endfor

check = 0;

for k = 1:n
if abs(x(k) - c(k))>tol
bool = 0;
endif

if abs(x(k) - c(k))<tol
bool = 1;
endif
endfor


if i==3 
iterations = iterations + 1;
endif

endfor
c(:) = x(:);
until bool == 1

track = 0;
for i = 1:n
ans(i) =  x(i);
endfor

ans
iterations

end
