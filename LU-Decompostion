function mim = LUdecomp(C,b)



f = 0;
k = length(C);



for i = k:-1:1
f = f+i-1;
end

fac = zeros(1,f);
check = 0;




for i = 2:k

check = check +1;
fac(check)=C(i,1)/C(1,1);
C(i,:) = C(i,:) - (C(i,1)/C(1,1))*C(1,:);



end


for i = 3:1:k
for j = 2:i-1

check = check + 1;
fac(check) = C(i,j)/C(j,j);
C(i, :) = C(i, :) - (C(i,j)/C(j,j))*C(j, :);

end
j=2;
end
B = eye(k);
track = 0;

for i = 2:k
B(i,1) = fac(i-1);
end

fac = fac(k:f);

track = 1;
for i = 3:1:k
for j = 2:i-1

if B(i,j)==0
B(i,j) = fac(track);
track = track + 1;

end
end
end


L = B;
U = C;


%just found L and U%


n = length(C);
y = zeros(n,1);
check = 0;

for i = 1:n
for j = 1:n

if j == i
continue
end

check = check+1;

if check == n-1 && i ~= n

y(i) = y(i)/L(i,i);

end

if check == n-1 && i == n
y(i) = y(i) - L(i,j)*y(j);
y(i) = y(i)/L(i,i);
end

if check ~= n-1 && check ~=1
y(i) = y(i) - L(i,j)*y(j);
end

if  check == 1
y(i) = b(i) - L(i,j) * y(j);
end


end
check = 0;
end

x= zeros(n,1);
check = 0;

for i = n:-1:1
for j = n:-1:1

if i == j
continue
end

check = check +1;

if check == 1

x(i) = y(i) - U(i,j)*x(j);
end

if check ~=1  && check ~= n-1

x(i) = x(i) - U(i,j)*x(j);

end

if check == n-1 && i ~= 1
x(i) = x(i)/U(i,i);
end

if check == n-1 && i == 1
x(i) = x(i) - U(i,j)*x(j);
x(i) = x(i)/U(i,i);
end

end
check = 0;
end

mim = x;

end
